mod <- '
energeticA =~ active + energetic + vigorous + wakeful + wide.awake + full.of.pep + lively
tenseA =~ intense + jittery + fearful + tense + clutched.up
'
fit <- cfa(mod, data = msq, std.lv = TRUE, missing = "fiml")
summary(fit, fit.measures = TRUE)
semPaths(fit, "std")
library(lavaan)
library(semPlot)
library(semTools)
library(psych)
## Use msq data
mod <- '
energeticA =~ active + energetic + vigorous + wakeful + wide.awake + full.of.pep + lively
tenseA =~ intense + jittery + fearful + tense + clutched.up
'
fit <- cfa(mod, data = msq, std.lv = TRUE, missing = "fiml")
summary(fit, fit.measures = TRUE)
semPaths(fit, "std")
semPaths(fit, "std", intercept = FALSE)
library("semPlot", lib.loc="C:/Program Files/R/R-3.1.0/library")
install.packages(c("car", "cluster", "d3Network", "manipulate", "rmarkdown", "rockchalk"))
library(lavaan)
library(semPlot)
library(semTools)
library(psych)
## Use msq data
mod <- '
energeticA =~ active + energetic + vigorous + wakeful + wide.awake + full.of.pep + lively
tenseA =~ intense + jittery + fearful + tense + clutched.up
'
fit <- cfa(mod, data = msq, std.lv = TRUE, missing = "fiml")
summary(fit, fit.measures = TRUE)
semPaths(fit, "std", intercept = FALSE)
library(semPlot)
detach("package:lavaan", unload=TRUE)
library("semPlot", lib.loc="C:/Program Files/R/R-3.1.0/library")
library(lavaan)
library(semPlot)
install.packages("cluster")
library(semPlot)
library(psych)
names(msq)
?msq
names(msq)["Active"]
names(msq)["active"]
names(msq)[grep("active")]
grep(names(msq), "active")
grep(names(msq), "Active")
mod <- '
energetic =~ active + vigorous + wakeful + lively
negative =~  jittery + nervous + scared
'
fit <- cfa(mod, data = msq)
library(lavaan)
mod <- '
energetic =~ active + vigorous + wakeful + lively
negative =~  jittery + nervous + scared
'
fit <- cfa(mod, data = msq)
summary(fit)
summary(fit, fit.measures = T)
fit1 <- cfa(mod, data = msq, std.lv = TRUE)
summary(fit1, fit.measures = T)
fitg <- cfa(mod, data = msq, group = "scale")
fitgW <- cfa(mod, data = msq, group = "scale",
group.equal = "loadings")
anova(fitg, fitgW)
measurementInvariance(mod, data = msq, group = "scale")
library(semTools)
measurementInvariance(mod, data = msq, group = "scale")
semPaths(fitCat, "est", intercept = FALSE, nCharNodes = 6)
setwd("~/Documents/GitHub/Talks/SPSP_lavaan")
library(knitr)
purl("SPSP_lavaan.Rmd")
